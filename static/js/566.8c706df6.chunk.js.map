{"version":3,"file":"static/js/566.8c706df6.chunk.js","mappings":"iMAsBA,EAtBkB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACnB,OACE,8BACGA,EAAMC,KAAI,SAAAC,GAAI,OACb,gBAAIC,UAAU,aAAd,WACE,gBAAKA,UAAU,YAAf,UACE,gBAAKA,UAAU,iBAAiBC,IAAKF,EAAKG,MAAOC,IAAKJ,EAAKK,UAE7D,eAAIJ,UAAU,aAAd,SAA4BD,EAAKK,QACjC,iBAAKJ,UAAU,oBAAf,WACE,uBAAID,EAAKM,YACT,iBAAKL,UAAU,iBAAf,WACE,cAAGM,KAAI,iBAAYP,EAAKQ,OAAxB,SAAkCR,EAAKQ,SACvC,cAAGD,KAAI,cAASP,EAAKS,OAArB,SAA+BT,EAAKS,gBATVT,EAAKU,UCgC7C,EA/Bc,WACZ,IAAMC,GAAWC,EAAAA,EAAAA,MACXd,GAAQe,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKjB,UAE9CkB,EAAAA,EAAAA,YAAU,WACRL,GAASM,EAAAA,EAAAA,IAAW,MACnB,IAYH,OACE,qBAAShB,UAAU,4BAAnB,WACE,eAAIA,UAAU,cAAd,uCACA,eAAIA,UAAU,kBAAd,SAAiCH,EAAMA,MAAMoB,SAAU,SAAC,EAAD,CAAWpB,MAAOA,EAAMA,UAC9EA,EAAMA,MAAMoB,SACX,mBAAQR,GAAG,WAAWT,UAAU,MAAMkB,QAf3B,WACf,IAAMC,EAAWtB,EAAMuB,KAAO,EAE9BV,GAASM,EAAAA,EAAAA,IAAWG,IAEhBA,IAAatB,EAAMwB,aACrBC,SAASC,cAAc,aAAaC,UAAUC,IAAI,WAShD,4B,oHC1BKC,GAAoBC,EAAAA,EAAAA,IAAa,qBACjCC,GAAoBD,EAAAA,EAAAA,IAAa,qBACjCE,GAAkBF,EAAAA,EAAAA,IAAa,mBAE/BG,GAAwBH,EAAAA,EAAAA,IAAa,yBACrCI,GAAwBJ,EAAAA,EAAAA,IAAa,yBACrCK,GAAsBL,EAAAA,EAAAA,IAAa,uBAEnCM,GAAkBN,EAAAA,EAAAA,IAAa,mBCR/BX,IDSkBW,EAAAA,EAAAA,IAAa,oBACfA,EAAAA,EAAAA,IAAa,iBCVhB,SAAAP,GAAI,OAAI,SAAAV,GAChCA,EAASwB,KAETC,OAAOC,YAAYC,IAAnB,sBAAsCjB,EAAtC,aACGkB,MAAK,YAAe,IAAZxB,EAAW,EAAXA,KACPJ,EAASwB,EAA0BpB,OAEpCyB,OAAM,SAAAC,GAAK,OAAI9B,EAASwB,EAAwBM,UAGxCC,EAAiB,kBAAM,SAAA/B,GAClCA,EAASwB,KAETC,OAAOC,YAAYC,IAAnB,cACGC,MAAK,YAAe,IAAZxB,EAAW,EAAXA,KACPJ,EAASwB,EAA8BpB,OAExCyB,OAAM,SAAAC,GAAK,OAAI9B,EAASwB,EAA4BM,SAG5CE,EAAW,SAACC,EAAUC,GAAX,OAAqB,SAAAlC,GAC3CA,EAASwB,KACTC,OAAOC,YAAYS,KAAnB,SAAkCF,EAAU,CAC1CG,QAAS,CAAEC,MAAOH,KAEjBN,MAAK,SAAAU,OACLT,OAAM,SAAAC,GAAK,OAAIS,QAAQC,IAAI,QAASV","sources":["components/Users/UsersCard.jsx","components/Users/Users.jsx","redux/actions.js","redux/operations.js"],"sourcesContent":["const UsersCard = ({ users }) => {\n  return (\n    <>\n      {users.map(user => (\n        <li className=\"users_item\" key={user.id}>\n          <div className=\"users_img\">\n            <img className=\"users_img-item\" src={user.photo} alt={user.name} />\n          </div>\n          <h3 className=\"users_name\">{user.name}</h3>\n          <div className=\"users_description\">\n            <p>{user.position}</p>\n            <div className=\"users_contacts\">\n              <a href={`mailto:${user.email}`}>{user.email}</a>\n              <a href={`tel:${user.phone}`}>{user.phone}</a>\n            </div>\n          </div>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default UsersCard;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchUsers } from '../../redux/operations';\nimport UsersCard from './UsersCard';\n\nconst Users = () => {\n  const dispatch = useDispatch();\n  const users = useSelector(state => state.data.users);\n\n  useEffect(() => {\n    dispatch(fetchUsers(1));\n  }, []);\n\n  const showMore = () => {\n    const nextPage = users.page + 1;\n\n    dispatch(fetchUsers(nextPage));\n\n    if (nextPage === users.total_pages) {\n      document.querySelector('#showMore').classList.add('hidden');\n    }\n  };\n\n  return (\n    <section className=\"users_container container\">\n      <h2 className=\"users_title\">Working with GET request</h2>\n      <ul className=\"users_list list\">{users.users.length && <UsersCard users={users.users} />}</ul>\n      {users.users.length && (\n        <button id=\"showMore\" className=\"btn\" onClick={showMore}>\n          Show more\n        </button>\n      )}\n    </section>\n  );\n};\n\nexport default Users;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchUsersRequest = createAction('fetchUsersRequest');\nexport const fetchUsersSuccess = createAction('fetchUsersSuccess');\nexport const fetchUsersError = createAction('fetchUsersError');\n\nexport const fetchPositionsRequest = createAction('fetchPositionsRequest');\nexport const fetchPositionsSuccess = createAction('fetchPositionsSuccess');\nexport const fetchPositionsError = createAction('fetchPositionsError');\n\nexport const postUserRequest = createAction('postUserRequest');\nexport const postUserSuccess = createAction('postUserSuccess');\nexport const postUserError = createAction('postUserError');\n","import * as actions from './actions';\n\nexport const fetchUsers = page => dispatch => {\n  dispatch(actions.fetchUsersRequest());\n\n  window.AgencyAxios.get(`/users?page=${page}&count=6`)\n    .then(({ data }) => {\n      dispatch(actions.fetchUsersSuccess(data));\n    })\n    .catch(error => dispatch(actions.fetchUsersError(error)));\n};\n\nexport const fetchPositions = () => dispatch => {\n  dispatch(actions.fetchPositionsRequest());\n\n  window.AgencyAxios.get(`/positions`)\n    .then(({ data }) => {\n      dispatch(actions.fetchPositionsSuccess(data));\n    })\n    .catch(error => dispatch(actions.fetchPositionsError(error)));\n};\n\nexport const postUser = (formData, token) => dispatch => {\n  dispatch(actions.postUserRequest());\n  window.AgencyAxios.post(`/users`, formData, {\n    headers: { Token: token },\n  })\n    .then(responce => {})\n    .catch(error => console.log('error', error));\n};\n"],"names":["users","map","user","className","src","photo","alt","name","position","href","email","phone","id","dispatch","useDispatch","useSelector","state","data","useEffect","fetchUsers","length","onClick","nextPage","page","total_pages","document","querySelector","classList","add","fetchUsersRequest","createAction","fetchUsersSuccess","fetchUsersError","fetchPositionsRequest","fetchPositionsSuccess","fetchPositionsError","postUserRequest","actions","window","AgencyAxios","get","then","catch","error","fetchPositions","postUser","formData","token","post","headers","Token","responce","console","log"],"sourceRoot":""}