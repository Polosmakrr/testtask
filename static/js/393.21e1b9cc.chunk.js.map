{"version":3,"file":"static/js/393.21e1b9cc.chunk.js","mappings":"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","sources":["components/SignUp/SignUp.jsx","redux/actions.js","redux/operations.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPositions, postUser } from '../../redux/operations';\n\nconst SignUp = () => {\n  const dispatch = useDispatch();\n  const positions = useSelector(state => state.data.positions[0]);\n  const { signUp } = document.forms;\n  const [name, setName] = useState([]);\n  const [phone, setPhone] = useState([]);\n  const [email, setEmail] = useState([]);\n  const [radio, setRadio] = useState([]);\n  const [photo, setPhoto] = useState([]);\n\n  useEffect(() => {\n    dispatch(fetchPositions());\n  }, []);\n\n  const onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, phone, position_id, photo } = signUp;\n    const values = {\n      position_id: position_id.value,\n      name: name.value,\n      emali: email.value,\n      phone: phone.value,\n      photo: photo.files[0],\n    };\n\n    const formData = new FormData();\n    formData.append('name', values.name);\n    formData.append('email', values.emali);\n    formData.append('phone', values.phone);\n    formData.append('position_id', parseInt(values.position_id));\n    formData.append('photo', values.photo);\n\n    window.AgencyAxios.get('/token')\n      .then(({ data }) => dispatch(postUser(formData, data.token)))\n      .catch(error => error);\n  };\n\n  const check = e => {\n    const { name, value } = e.target;\n\n    if (name === 'name') {\n      setName(value);\n    }\n\n    if (name === 'email') {\n      setEmail(value);\n    }\n\n    if (name === 'phone') {\n      setPhone(value);\n    }\n\n    if (name === 'position_id') {\n      setRadio(value);\n    }\n\n    if (name === 'photo') {\n      setPhoto(value);\n    }\n  };\n\n  if (\n    name.length !== 0 &&\n    email.length !== 0 &&\n    phone.length !== 0 &&\n    radio.length !== 0 &&\n    photo.length !== 0\n  ) {\n    document.querySelector('#submit').disabled = false;\n  }\n\n  return (\n    <section className=\"container\">\n      <div className=\"signup_container\">\n        <h2 className=\"signup_title\">Working with POST request</h2>\n        <form className=\"signup_form\" method=\"POST\" id=\"signUp\" onSubmit={onSubmit}>\n          <input\n            className=\"signup_input\"\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            minLength={2}\n            maxLength={60}\n            title=\"Username should contain 2-60 characters and contain only letters, apostrophe, dash and spaces.\"\n            placeholder=\"Your Name\"\n            onChange={check}\n            required\n          />\n          <input\n            className=\"signup_input\"\n            type=\"email\"\n            name=\"email\"\n            pattern=\"[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\"\n            minLength={2}\n            maxLength={100}\n            title=\"Email myst be a string and separated into two parts by @ symbol. a personal_info and a domain, that is personal_info@domain.\"\n            placeholder=\"Email\"\n            onChange={check}\n            required\n          />\n          <input\n            className=\"signup_input\"\n            type=\"tel\"\n            name=\"phone\"\n            pattern=\"^[\\+]{0,1}380([0-9]{9})$)\"\n            title=\"Number should start with code of Ukraine +380 and must be digits and can contain spaces, dashes.\"\n            placeholder=\"Phone\"\n            onChange={check}\n            required\n          />\n          <div className=\"signup_select\">\n            <p className=\"signup_select_title\">Select your position</p>\n            <ul className=\"signup_select_list list\">\n              {positions &&\n                positions.positions.map(item => (\n                  <li className=\"signup_select_list-item\" key={item.id}>\n                    <input\n                      className=\"signup_select_list-input\"\n                      type=\"radio\"\n                      id={item.id}\n                      name=\"position_id\"\n                      value={item.id}\n                      onChange={check}\n                      required\n                    />\n                    <label className=\"signup_select_list-label\" for={item.id}>\n                      {item.name}\n                    </label>\n                  </li>\n                ))}\n            </ul>\n          </div>\n\n          <div className=\"signup_load_img\">\n            <label className=\"signup_load_img-label\" for=\"file-input\">\n              Upload\n            </label>\n            <input\n              className=\"signup_load_img-input\"\n              for=\"file-input\"\n              value={photo.length !== 0 ? '...' + photo.split('\\\\').pop() : 'Upload your photo'}\n              disabled\n            />\n            <input\n              id=\"file-input\"\n              type=\"file\"\n              title=\"Minimum size of photo 70x70px. The photo format must be jpeg/jpg type. The photo size must not be greater than 5 Mb.\"\n              name=\"photo\"\n              required\n              onChange={check}\n            />\n          </div>\n          <div className=\"signup_buttons\">\n            <button className=\"btn\" type=\"submit\" id=\"submit\" disabled>\n              Sign up\n            </button>\n          </div>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nexport default SignUp;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchUsersRequest = createAction('fetchUsersRequest');\nexport const fetchUsersSuccess = createAction('fetchUsersSuccess');\nexport const fetchUsersError = createAction('fetchUsersError');\n\nexport const fetchPositionsRequest = createAction('fetchPositionsRequest');\nexport const fetchPositionsSuccess = createAction('fetchPositionsSuccess');\nexport const fetchPositionsError = createAction('fetchPositionsError');\n\nexport const postUserRequest = createAction('postUserRequest');\nexport const postUserSuccess = createAction('postUserSuccess');\nexport const postUserError = createAction('postUserError');\n","import * as actions from './actions';\n\nexport const fetchUsers = page => dispatch => {\n  dispatch(actions.fetchUsersRequest());\n\n  window.AgencyAxios.get(`/users?page=${page}&count=6`)\n    .then(({ data }) => {\n      dispatch(actions.fetchUsersSuccess(data));\n    })\n    .catch(error => dispatch(actions.fetchUsersError(error)));\n};\n\nexport const fetchPositions = () => dispatch => {\n  dispatch(actions.fetchPositionsRequest());\n\n  window.AgencyAxios.get(`/positions`)\n    .then(({ data }) => {\n      dispatch(actions.fetchPositionsSuccess(data));\n    })\n    .catch(error => dispatch(actions.fetchPositionsError(error)));\n};\n\nexport const postUser = (formData, token) => dispatch => {\n  dispatch(actions.postUserRequest());\n  window.AgencyAxios.post(`/users`, formData, {\n    headers: { Token: token },\n  })\n    .then(responce => {\n      dispatch(actions.postUserSuccess(responce));\n    })\n    .catch(error => {\n      dispatch(actions.postUserError(error));\n    });\n};\n"],"names":["dispatch","useDispatch","positions","useSelector","state","data","signUp","document","forms","useState","name","setName","phone","setPhone","email","setEmail","radio","setRadio","photo","setPhoto","useEffect","fetchPositions","check","e","target","value","length","querySelector","disabled","className","method","id","onSubmit","preventDefault","position_id","values","emali","files","formData","FormData","append","parseInt","window","AgencyAxios","get","then","postUser","token","catch","error","type","pattern","minLength","maxLength","title","placeholder","onChange","required","map","item","for","split","pop","fetchUsersRequest","createAction","fetchUsersSuccess","fetchUsersError","fetchPositionsRequest","fetchPositionsSuccess","fetchPositionsError","postUserRequest","postUserSuccess","postUserError","fetchUsers","page","actions","post","headers","Token","responce"],"sourceRoot":""}